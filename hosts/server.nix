{ pkgs, lib, self, ... }:

let
  sshKeys = [
    "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAID7wWcuQm1+P34UvkQiu/fyer+PNyvn+j+uh1MRDyhp5 Generated By Termius"
  ];
in
{
  # Garnix server setup
  garnix.server.enable = true;

  # Recommended: set system.stateVersion for reproducible behaviour
  system.stateVersion = "24.05";

  # Enable SSH so we can log in
  services.openssh.enable = true;

  # User 'me' with sudo access
  users.users.me = {
    isNormalUser = true;
    description = "me";
    extraGroups = [ "wheel" "systemd-journal" "docker" ];
    openssh.authorizedKeys.keys = sshKeys;
  };

  # Create docker group
  users.groups = {
    docker = {};
  };

  # Allow sudo without password
  security.sudo.wheelNeedsPassword = false;

  # Packages available on the system
  environment.systemPackages = [
    pkgs.htop
    pkgs.tree
    pkgs.docker
    pkgs.docker-compose
  ];

  # Docker configuration
  virtualisation.docker = {
    enable = true;
    liveRestore = false; # disable live-restore for EasyPanel compatibility
  };

  # Ensure /var/run/docker.sock is readable by docker group
  systemd.services."docker" = {
    serviceConfig = {
      ExecStartPost = [
        "${pkgs.coreutils}/bin/chown root:docker /var/run/docker.sock"
        "${pkgs.coreutils}/bin/chmod 0660 /var/run/docker.sock"
      ];
    };
  };

  # Disable firewall entirely (opens all ports)
  networking.firewall.enable = false;

  # Required for Garnix
  nixpkgs.hostPlatform = "x86_64-linux";
}
